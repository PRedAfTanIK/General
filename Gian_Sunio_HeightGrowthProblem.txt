import java.util.*;
import java.lang.*;
import java.io.*;

public class Main
{
	public static void main (String[] args) throws java.lang.Exception
	{
		//your code here
                Scanner sc = new Scanner(System.in);
                long h1 = sc.nextInt();
                long h2 = sc.nextInt();
                long v1 = sc.nextInt();
                long v2 = sc.nextInt();
                boolean q = getHeightProblem(h1,h2,v1,v2);
                
                System.out.print(q);
	}

        static boolean getHeightProblem(long h1,long h2,long v1,long v2){
                if(h1 == h2) return true; /*already equal*/
                if(v1==v2) return false;  /* height not equal, and speed of increase same. So heights will never be same*/
                if(h1>h2 && v1>v2) return false; /*taller will always be taller*/
                if(h1<h2 && v1<v2) return false; /*taller will always be taller*/
                
                long initialBig = h1>h2?1:2;  /*remember who is taller initially*/
                long diff = h1-h2;   /* this should be zero at some point,not right now*/
			
		    /* Every loop represents one second time*/
                while(diff!=0){
                        h1+=v1;
                        h2+=v2;
                        diff = h1-h2;
                        long currentBig = h1>h2?1:2;  /*who is currently big*/

				/*if the shorter guy already passed the taller guy,
				and their heights are not equal*/
				/*shorter guy will keep on growing and initially taller guy will
				be shorter now. Due to difference in speeds, he will never catch up.
				So return false*/

                        if(currentBig!=initialBig && diff!=0)
                                return false;
                }
		    
		    /* Outside loop means difference in heights is zero. Return true*/
                return true;
        }
}